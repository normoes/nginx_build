user  nginx;
#load_module "/usr/lib/nginx/modules/ngx_http_geoip2_module.so";
load_module "/nginx/nginx/objs/ngx_http_geoip2_module.so";
#load_module "modules/ngx_http_geoip_module.so";
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  768;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    keepalive_timeout  65;
    underscores_in_headers on;

    # Nginx will handle gzip compression of responses from the app server
    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/json;
    gzip_min_length 1000;

    # Remove nginx version in Response Server header
    server_tokens off;
    
    geoip2 /usr/local/share/GeoIP/GeoLite2-City.mmdb {
      $geoip2_data_state_code subdivisions 0 iso_code;
      $geoip2_data_state_name subdivisions 0 names en;
    }
    geoip2 /usr/local/share/GeoIP/GeoLite2-Country.mmdb {
      $geoip2_data_country_code default=US country iso_code;
      $geoip2_data_country_name country names en;
    }

    server {
        listen 80;

        location ~ ^/region/ {
          #if ($geoip2_data_state_code = NY) {
          #  return 403;
          #}
          # country=DE
          if ($geoip2_data_country_code = DE) {
            set $test "1";
          }
          # region=BW
          if ($geoip2_data_state_code = BW) {
            set $test  "${test}1";
          }
          # country=DE and region=BW
          if ($test = "11") {
            return 403;
          }
      
          # use the complete $request_uri for rewriting
          rewrite ^ $request_uri;
          # remove /faucet/
          # take the remaining content and put it into $uri
          rewrite ^/region/(.*) /$1 break;  # add / before $1 to avoid zero length $uri
          return 400; #if the second rewrite does not match

          include /etc/nginx/mime.types;
          root   /usr/share/nginx/html;
          index  $uri/index.html;


        }

        location ~ ^/country/ {
          if ($geoip2_data_country_code = DE) {
            return 403;
          }
 
          # use the complete $request_uri for rewriting
          rewrite ^ $request_uri;
          # remove /faucet/
          # take the remaining content and put it into $uri
          rewrite ^/country/(.*) /$1 break;  # add / before $1 to avoid zero length $uri
          return 400; #if the second rewrite does not match

          include /etc/nginx/mime.types;
          root   /usr/share/nginx/html;
          index  $uri/index.html;
        }
        location / {
          add_header X-GEO-STATE-NAME $geoip2_data_state_name;
          add_header X-GEO-STATE-CODE $geoip2_data_state_code;
          add_header X-GEO-COUNTRY-CODE $geoip2_data_country_code;
          add_header X-GEO-COUNTRY-NAME $geoip2_data_country_name;
          include /etc/nginx/mime.types;
          root   /usr/share/nginx/html;
          index  index.html;
       }
    }
}
